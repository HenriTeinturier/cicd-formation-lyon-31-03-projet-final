name: CI/CD workflow

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  check-tests-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: verify code
            npm_command: "npm run lint"
          - name: Verify vulnerabilities
            npm_command: "npm audit --production --audit-level=critical"
          - name: run tests
            npm_command: "npm run test:ci"
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install node
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "./server/package-lock.json"
      - name: installation dependances
        run: npm ci
      - name: ${{ matrix.name }}
        run: ${{ matrix.npm_command }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        if: ${{ matrix.npm_command == 'npm run test:ci' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  check-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "./client/package-lock.json"
      - name: install dependances
        run: npm ci
      - name: Vérifier le code
        run: npm run lint
      - name: Vérifier les vulnérabilités
        run: npm audit --production --audit-level=critical

  build-frontend:
    runs-on: ubuntu-latest
    needs: check-frontend
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "./client/package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Build application frontend
        run: npm run build
      - name: Upload build frontend
        uses: actions/upload-artifact@v4
        with:
          name: build-frontend
          path: ./client/dist

  test-e2e-frontend:
    needs: ["build-frontend", "check-tests-backend"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: Install dependencies
        run: |
          cd server
          npm ci
      - name: Download build frontend
        uses: actions/download-artifact@v4
        with:
          name: build-frontend
          path: ./client/dist
      - name: Start backend
        run: |
          cd server
          npm start &
      - name: Start E2e Test
        uses: cypress-io/github-action@v6
        with:
          working-directory: client
          browser: chrome
          start: npm run preview
          wait-on: http://localhost:4173
          wait-on-timeout: 60
          config: baseUrl=http://localhost:4173
